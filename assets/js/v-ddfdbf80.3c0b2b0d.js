"use strict";(self.webpackChunkcassandre_trading_bot_website=self.webpackChunkcassandre_trading_bot_website||[]).push([[97],{6099:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-ddfdbf80",path:"/learn/quickstart.html",title:"Quickstart your trading bot",lang:"en-US",frontmatter:{lang:"en-US",title:"Quickstart your trading bot",description:"Learn how to create your own crypto trading bot in few simple steps"},excerpt:"",headers:[{level:2,title:"Create your project",slug:"create-your-project",children:[]},{level:2,title:"Review configuration",slug:"review-configuration",children:[]},{level:2,title:"Explore sources",slug:"explore-sources",children:[]},{level:2,title:"Manage orders and positions",slug:"manage-orders-and-positions",children:[]},{level:2,title:"Run the bot and the strategy",slug:"run-the-bot-and-the-strategy",children:[]}],filePathRelative:"learn/quickstart.md"}},862:(n,a,s)=>{s.r(a),s.d(a,{default:()=>Qn});var e=s(6252);const t=(0,e._)("h1",{id:"quickstart",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#quickstart","aria-hidden":"true"},"#"),(0,e.Uk)(" Quickstart")],-1),p={class:"custom-container tip"},o=(0,e._)("p",{class:"custom-container-title"},"TIP",-1),c=(0,e.Uk)('If you are new to trading, you can read our tutorial "'),r=(0,e.Uk)("Trading basics"),l=(0,e.Uk)('".'),i=(0,e._)("h2",{id:"create-your-project",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#create-your-project","aria-hidden":"true"},"#"),(0,e.Uk)(" Create your project")],-1),u=(0,e.Uk)("If you don't have an existing spring boot project, you can use our "),k={href:"https://search.maven.org/search?q=a:cassandre-trading-bot-spring-boot-starter-basic-archetype",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("maven archetype"),d=(0,e.Uk)(" to generate one:"),m=(0,e.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mvn archetype:generate <span class="token punctuation">\\</span>\n-DarchetypeGroupId<span class="token operator">=</span>tech.cassandre.trading.bot <span class="token punctuation">\\</span>\n-DarchetypeArtifactId<span class="token operator">=</span>cassandre-trading-bot-spring-boot-starter-basic-archetype <span class="token punctuation">\\</span>\n-DarchetypeVersion<span class="token operator">=</span><span class="token number">5.0</span>.6 <span class="token punctuation">\\</span>\n-DgroupId<span class="token operator">=</span>com.mycompany.app <span class="token punctuation">\\</span>\n-DartifactId<span class="token operator">=</span>my-app <span class="token punctuation">\\</span>\n-Dversion<span class="token operator">=</span><span class="token number">1.0</span>-SNAPSHOT <span class="token punctuation">\\</span>\n-Dpackage<span class="token operator">=</span>com.mycompany.app\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>The created project will have the following structure and files:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>my-app/\n├── pom.xml\n└── src\n    ├── main\n    │   ├── java\n    │   │   └── com\n    │   │       └── mycompany\n    │   │           └── app\n    │   │               ├── Application.java\n    │   │               ├── package-info.java\n    │   │               └── SimpleStrategy.java\n    │   └── resources\n    │       ├── application.properties\n    │       ├── user-main.tsv\n    │       └── user-trade.tsv\n    └── test\n        ├── java\n        │   └── com\n        │       └── mycompany\n        │           └── app\n        │               └── SimpleStrategyTest.java\n        └── resources\n            ├── application.properties\n            ├── tickers-btc-usdt.tsv\n            ├── user-main.tsv\n            └── user-trade.tsv\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="review-configuration" tabindex="-1"><a class="header-anchor" href="#review-configuration" aria-hidden="true">#</a> Review configuration</h2><p>Your bot configuration is located in <code>src/main/resources/application.properties</code>:</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token comment">#</span>\n<span class="token comment"># Exchange configuration.</span>\n<span class="token attr-name">cassandre.trading.bot.exchange.driver-class-name</span><span class="token punctuation">=</span><span class="token attr-value">kucoin</span>\n<span class="token attr-name">cassandre.trading.bot.exchange.username</span><span class="token punctuation">=</span><span class="token attr-value">kucoin.cassandre.test@gmail.com</span>\n<span class="token attr-name">cassandre.trading.bot.exchange.passphrase</span><span class="token punctuation">=</span><span class="token attr-value">cassandre</span>\n<span class="token attr-name">cassandre.trading.bot.exchange.key</span><span class="token punctuation">=</span><span class="token attr-value">6054ad25365ac6000689a998</span>\n<span class="token attr-name">cassandre.trading.bot.exchange.secret</span><span class="token punctuation">=</span><span class="token attr-value">af080d55-afe3-47c9-8ec1-4b479fbcc5e7</span>\n<span class="token comment">#</span>\n<span class="token comment"># Modes.</span>\n<span class="token attr-name">cassandre.trading.bot.exchange.modes.sandbox</span><span class="token punctuation">=</span><span class="token attr-value">true</span>\n<span class="token attr-name">cassandre.trading.bot.exchange.modes.dry</span><span class="token punctuation">=</span><span class="token attr-value">false</span>\n<span class="token comment">#</span>\n<span class="token comment"># Exchange API calls rates (In ms or standard ISO 8601 duration like &#39;PT5S&#39;).</span>\n<span class="token attr-name">cassandre.trading.bot.exchange.rates.account</span><span class="token punctuation">=</span><span class="token attr-value">2000</span>\n<span class="token attr-name">cassandre.trading.bot.exchange.rates.ticker</span><span class="token punctuation">=</span><span class="token attr-value">2000</span>\n<span class="token attr-name">cassandre.trading.bot.exchange.rates.trade</span><span class="token punctuation">=</span><span class="token attr-value">2000</span>\n<span class="token comment">#</span>\n<span class="token comment"># Database configuration.</span>\n<span class="token attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token attr-value">org.hsqldb.jdbc.JDBCDriver</span>\n<span class="token attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:hsqldb:mem:cassandre</span>\n<span class="token attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token attr-value">sa</span>\n<span class="token attr-name">spring.datasource.password</span><span class="token punctuation">=</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>',6),g={class:"custom-container tip"},h=(0,e._)("p",{class:"custom-container-title"},"TIP",-1),f=(0,e.Uk)("Please, create and configure your own Kucoin account. You can learn how to do it "),y=(0,e.Uk)("here"),v=(0,e.Uk)("."),w=(0,e.uE)('<h2 id="explore-sources" tabindex="-1"><a class="header-anchor" href="#explore-sources" aria-hidden="true">#</a> Explore sources</h2><p>The <code>src/main/java/com/mycompany/app/Application.java</code> file is a classical spring boot Application.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mycompany<span class="token punctuation">.</span>app</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * Application start.\n */</span>\n<span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>\n\n\t<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>The <code>src/main/java/com/mycompany/app/SimpleStrategy.java</code> is the strategy executed by the bot:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mycompany<span class="token punctuation">.</span>app</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>market<span class="token punctuation">.</span></span><span class="token class-name">TickerDTO</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>position<span class="token punctuation">.</span></span><span class="token class-name">PositionDTO</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>trade<span class="token punctuation">.</span></span><span class="token class-name">OrderDTO</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>trade<span class="token punctuation">.</span></span><span class="token class-name">TradeDTO</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>dto<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">AccountDTO</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span></span><span class="token class-name">BasicCassandreStrategy</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>strategy<span class="token punctuation">.</span></span><span class="token class-name">CassandreStrategy</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>util<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">CurrencyDTO</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">tech<span class="token punctuation">.</span>cassandre<span class="token punctuation">.</span>trading<span class="token punctuation">.</span>bot<span class="token punctuation">.</span>util<span class="token punctuation">.</span>dto<span class="token punctuation">.</span></span><span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedHashMap</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * Simple strategy.\n */</span>\n<span class="token annotation punctuation">@CassandreStrategy</span><span class="token punctuation">(</span>strategyName <span class="token operator">=</span> <span class="token string">&quot;Simple strategy&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">SimpleStrategy</span> <span class="token keyword">extends</span> <span class="token class-name">BasicCassandreStrategy</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRequestedCurrencyPairs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// We only ask BTC/USDT tickers (Base currency : BTC / Quote currency : USDT).</span>\n        <span class="token keyword">return</span> <span class="token class-name">Set</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">(</span>BTC<span class="token punctuation">,</span> USDT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AccountDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">getTradeAccount</span><span class="token punctuation">(</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AccountDTO</span><span class="token punctuation">&gt;</span></span> accounts<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// From all the accounts we have on the exchange, we must return the one we use for trading.</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>accounts<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> accounts<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> accounts<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>a <span class="token operator">-&gt;</span> <span class="token string">&quot;trade&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">onAccountsUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">AccountDTO</span><span class="token punctuation">&gt;</span></span> accounts<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Here, we will receive an AccountDTO each time there is a change on your account.</span>\n        accounts<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>account <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about an account : &quot;</span> <span class="token operator">+</span> account<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">onTickersUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">,</span> <span class="token class-name">TickerDTO</span><span class="token punctuation">&gt;</span></span> tickers<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Here we will receive all tickers we required from the exchange.</span>\n        tickers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>ticker <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about a ticker : &quot;</span> <span class="token operator">+</span> ticker<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">onOrdersUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">OrderDTO</span><span class="token punctuation">&gt;</span></span> orders<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Here, we will receive an OrderDTO each time order data has changed on the exchange.</span>\n        orders<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>order <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about an order : &quot;</span> <span class="token operator">+</span> order<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTradesUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">TradeDTO</span><span class="token punctuation">&gt;</span></span> trades<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Here, we will receive a TradeDTO each time trade data has changed on the exchange.</span>\n        trades<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>trade <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about a trade : &quot;</span> <span class="token operator">+</span> trade<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPositionsUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">PositionDTO</span><span class="token punctuation">&gt;</span></span> positions<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Here, we will receive a PositionDTO each time a position has changed.</span>\n        positions<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>position <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about a position : &quot;</span> <span class="token operator">+</span> position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPositionsStatusUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">PositionDTO</span><span class="token punctuation">&gt;</span></span> positions<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Here, we will receive a PositionDTO each time a position status has changed.</span>\n        positions<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>position <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received information about a position status : &quot;</span> <span class="token operator">+</span> position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br></div></div>',5),_=(0,e.Uk)("A Cassandre strategy is a class annotated with "),T={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/CassandreStrategy.html",target:"_blank",rel:"noopener noreferrer"},S=(0,e.Uk)("@CassandreStrategy"),D=(0,e.Uk)(" and extending "),O={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/BasicCassandreStrategy.html",target:"_blank",rel:"noopener noreferrer"},U=(0,e.Uk)("BasicCassandreStrategy"),C=(0,e.Uk)(" or "),I={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/BasicTa4jCassandreStrategy.html",target:"_blank",rel:"noopener noreferrer"},A=(0,e.Uk)("BasicTa4jCassandreStrategy"),P=(0,e.Uk)("."),j=(0,e._)("p",null,"This is how it works:",-1),E=(0,e.Uk)("In "),x={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/CassandreStrategyInterface.html#getRequestedCurrencyPairs%28%29",target:"_blank",rel:"noopener noreferrer"},R=(0,e.Uk)("getRequestedCurrencyPairs()"),B=(0,e.Uk)(", you return the list of currency pairs tickers you want to receive from the exchange."),H=(0,e.Uk)("On the exchange, you usually have several accounts, and Cassandre needs to know which one of your accounts is the trading one. To do so, you have to implement the "),q={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/CassandreStrategyInterface.html#getTradeAccount%28java.util.Set%29",target:"_blank",rel:"noopener noreferrer"},G=(0,e.Uk)("getTradeAccount()"),N=(0,e.Uk)(" method, which gives you as a parameter the list of accounts you own on the exchange, and from that list, you have to return the one you use for trading."),F=(0,e.Uk)("If there is a change in your account data, "),M={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onAccountsUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},W=(0,e.Uk)("onAccountsUpdates()"),L=(0,e.Uk)(" will be called."),z=(0,e.Uk)("When new tickers are available, "),X={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onTickersUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},J=(0,e.Uk)("onTickersUpdates()"),K=(0,e.Uk)(" will be called."),Y=(0,e.Uk)("If there is a change in your orders, "),Q={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onOrdersUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},V=(0,e.Uk)("onOrdersUpdates()"),Z=(0,e.Uk)(" will be called."),$=(0,e.Uk)("If there is a change in your trades, "),nn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onTradesUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},an=(0,e.Uk)("onTradesUpdates()"),sn=(0,e.Uk)(" will be called."),en=(0,e.Uk)("If there is a change in your positions, "),tn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onPositionsUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},pn=(0,e.Uk)("onPositionsUpdates()"),on=(0,e.Uk)(" will be called."),cn=(0,e.Uk)("If there is a change in your position status, "),rn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#onPositionsStatusUpdates(java.util.Map)",target:"_blank",rel:"noopener noreferrer"},ln=(0,e.Uk)("onPositionsStatusUpdates()"),un=(0,e.Uk)(" will be called."),kn=(0,e.uE)('<h2 id="manage-orders-and-positions" tabindex="-1"><a class="header-anchor" href="#manage-orders-and-positions" aria-hidden="true">#</a> Manage orders and positions</h2><p>You can create an order this way:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>\n<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">onTickersUpdates</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">,</span> <span class="token class-name">TickerDTO</span><span class="token punctuation">&gt;</span></span> tickers<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token function">createBuyMarketOrder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">(</span>BTC<span class="token punctuation">,</span> USDT<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;0,001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>This is the list of available methods to manage orders:</p>',4),bn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#createBuyMarketOrder%28tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},dn=(0,e.Uk)("createBuyMarketOrder()"),mn=(0,e.Uk)("."),gn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#createSellMarketOrder%28tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},hn=(0,e.Uk)("createSellMarketOrder()"),fn=(0,e.Uk)("."),yn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#createBuyLimitOrder%28tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},vn=(0,e.Uk)("createBuyLimitOrder()"),wn=(0,e.Uk)("."),_n={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#createSellLimitOrder%28tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},Tn=(0,e.Uk)("createSellLimitOrder()"),Sn=(0,e.Uk)("."),Dn={class:"custom-container tip"},On=(0,e._)("p",{class:"custom-container-title"},"TIP",-1),Un=(0,e.Uk)("Inside your strategy, you can call "),Cn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#canBuy%28tech.cassandre.trading.bot.dto.user.AccountDTO,tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},In=(0,e.Uk)("canBuy()"),An=(0,e.Uk)(" and "),Pn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#canSell%28tech.cassandre.trading.bot.dto.util.CurrencyDTO,java.math.BigDecimal%29",target:"_blank",rel:"noopener noreferrer"},jn=(0,e.Uk)("canSell()"),En=(0,e.Uk)(" methods to see if your account has enough money to buy or sell assets."),xn=(0,e.uE)('<p>Cassandre trading bot also provides positions to manage your trading automatically:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Create rules.</span>\n<span class="token class-name">PositionRulesDTO</span> rules <span class="token operator">=</span> <span class="token class-name">PositionRulesDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">stopGainPercentage</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">stopLossPercentage</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// Create a position.</span>\n<span class="token function">createLongPosition</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CurrencyPairDTO</span><span class="token punctuation">(</span>BTC<span class="token punctuation">,</span> USDT<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;0,001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                rules<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',2),Rn=(0,e.Uk)("First, we created a "),Bn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/dto/position/PositionRulesDTO.html",target:"_blank",rel:"noopener noreferrer"},Hn=(0,e.Uk)("rule"),qn=(0,e.Uk)(" saying this position should be closed if the calculated gain is more than 10% or if the loss is more than 5%."),Gn=(0,e.Uk)("Then we called the "),Nn={href:"https://www.javadoc.io/doc/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-autoconfigure/latest/tech/cassandre/trading/bot/strategy/GenericCassandreStrategy.html#createLongPosition(tech.cassandre.trading.bot.dto.util.CurrencyPairDTO,java.math.BigDecimal,tech.cassandre.trading.bot.dto.position.PositionRulesDTO)",target:"_blank",rel:"noopener noreferrer"},Fn=(0,e.Uk)("createLongPosition()"),Mn=(0,e.Uk)(" method. This will automatically create a buy order. From now, for every ticker received, Cassandre will check the gain or loss made on this position; if it triggers one of the rules, Cassandre will automatically create a sell order to close the position."),Wn={class:"custom-container tip"},Ln=(0,e._)("p",{class:"custom-container-title"},"TIP",-1),zn=(0,e.Uk)("You can learn more about positions in the "),Xn=(0,e.Uk)("position chapter"),Jn=(0,e.Uk)("."),Kn=(0,e.uE)('<h2 id="run-the-bot-and-the-strategy" tabindex="-1"><a class="header-anchor" href="#run-the-bot-and-the-strategy" aria-hidden="true">#</a> Run the bot and the strategy</h2><p>In the project folder, run:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mvn spring-boot:run\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>The logs should display something like this:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>  <span class="token builtin class-name">.</span>   ____          _            __ _ _\n /<span class="token punctuation">\\</span><span class="token punctuation">\\</span> / ___<span class="token string">&#39;_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | &#39;</span>_ <span class="token operator">|</span> <span class="token string">&#39;_| | &#39;</span>_ <span class="token punctuation">\\</span>/ _` <span class="token operator">|</span> <span class="token punctuation">\\</span> <span class="token punctuation">\\</span> <span class="token punctuation">\\</span> <span class="token punctuation">\\</span>\n <span class="token punctuation">\\</span><span class="token punctuation">\\</span>/  ___<span class="token punctuation">)</span><span class="token operator">|</span> <span class="token operator">|</span>_<span class="token punctuation">)</span><span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">||</span> <span class="token punctuation">(</span>_<span class="token operator">|</span> <span class="token operator">|</span>  <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>\n  <span class="token string">&#39;  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v2.4.0)\n\n19:06:04 - Starting Application using Java 11.0.9.1 on straumat-pc-portable with PID 158157 (/home/straumat/tmp/my-app/target/classes started by straumat in /home/straumat/tmp/my-app)\n19:06:04 - No active profile set, falling back to default profiles: default\n19:06:04 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.\n19:06:04 - Finished Spring Data repository scanning in 4 ms. Found 0 JPA repository interfaces.\n19:06:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.\n19:06:04 - Finished Spring Data repository scanning in 49 ms. Found 5 JPA repository interfaces.\n19:06:04 - HikariPool-1 - Starting...\n19:06:04 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)\n19:06:04 - HikariPool-1 - Start completed.\n19:06:05 - Successfully acquired change log lock\n19:06:05 - Creating database history table with name: PUBLIC.DATABASECHANGELOG\n19:06:05 - Reading from PUBLIC.DATABASECHANGELOG\n19:06:05 - Table EXCHANGE_ACCOUNTS created\n19:06:05 - Auto-increment added to EXCHANGE_ACCOUNTS.ID\n19:06:05 - Table STRATEGIES created\n19:06:05 - Auto-increment added to STRATEGIES.ID\n19:06:05 - Table POSITIONS created\n19:06:05 - Auto-increment added to POSITIONS.ID\n19:06:05 - Table ORDERS created\n19:06:05 - Auto-increment added to ORDERS.ID\n19:06:05 - Table TRADES created\n19:06:05 - Auto-increment added to TRADES.ID\n19:06:05 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)\n19:06:05 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)\n19:06:05 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)\n19:06:05 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)\n19:06:05 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)\n19:06:05 - Foreign key constraint added to TRADES (FK_ORDER_ID)\n19:06:05 - Index IDX_STRATEGIES_STRATEGY_ID created\n19:06:05 - Index IDX_POSITIONS_POSITION_ID created\n19:06:05 - Index IDX_POSITIONS_STATUS created\n19:06:05 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created\n19:06:05 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created\n19:06:05 - Index IDX_ORDERS_ORDER_ID created\n19:06:05 - Index IDX_TRADES_TRADE_ID created\n19:06:05 - Index IDX_TRADES_ORDER_ID created\n19:06:05 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 34ms\n19:06:05 - Successfully released change log lock\n19:06:05 - Initializing ExecutorService &#39;</span>applicationTaskExecutor<span class="token string">&#39;\n19:06:05 - HHH000204: Processing PersistenceUnitInfo [name: default]\n19:06:05 - HHH000412: Hibernate ORM core version 5.4.27.Final\n19:06:05 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}\n19:06:05 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect\n19:06:06 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]\n19:06:06 - Initialized JPA EntityManagerFactory for persistence unit &#39;</span>default<span class="token string">&#39;\n19:06:06 - Calling Remote Init...\n19:06:07 - ExchangeConfiguration - Dry mode is ON\n19:06:07 - Adding account &#39;</span>main<span class="token string">&#39;\n19:06:07 - - Adding balance 99.0001 BTC\n19:06:07 - Adding account &#39;</span>trade<span class="token string">&#39;\n19:06:07 - - Adding balance 1 BTC\n19:06:07 - - Adding balance 100000 USDT\n19:06:07 - - Adding balance 10 ETH\n19:06:08 - ExchangeConfiguration - Connection to kucoin successful\n19:06:08 - ExchangeConfiguration - Supported currency pairs : BTC/USDT \n19:06:08 - ExchangeConfiguration - exchange configuration saved in database ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com)\n19:06:08 - StrategyConfiguration - Running strategy &#39;</span>Simple strategy&#39;\n<span class="token number">19</span>:06:08 - StrategyConfiguration - The strategy requires the following currency pair<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token builtin class-name">:</span> BTC/USDT\n<span class="token number">19</span>:06:08 - Triggering deferred initialization of Spring Data repositories…\n<span class="token number">19</span>:06:08 - Spring Data repositories initialized<span class="token operator">!</span>\n<span class="token number">19</span>:06:08 - No TaskScheduler/ScheduledExecutorService bean found <span class="token keyword">for</span> scheduled processing\n<span class="token number">19</span>:06:08 - Started Application <span class="token keyword">in</span> <span class="token number">4.975</span> seconds <span class="token punctuation">(</span>JVM running <span class="token keyword">for</span> <span class="token number">5.193</span><span class="token punctuation">)</span>\nReceived information about an account <span class="token builtin class-name">:</span> AccountDTO<span class="token punctuation">(</span>accountId<span class="token operator">=</span>main, <span class="token assign-left variable">name</span><span class="token operator">=</span>main, <span class="token assign-left variable">features</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>, <span class="token assign-left variable">balances</span><span class="token operator">=</span><span class="token punctuation">{</span>BTC<span class="token operator">=</span>BalanceDTO<span class="token punctuation">(</span>currency<span class="token operator">=</span>BTC, <span class="token assign-left variable">total</span><span class="token operator">=</span>null, <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token number">99.0001</span>, <span class="token assign-left variable">frozen</span><span class="token operator">=</span>null, <span class="token assign-left variable">loaned</span><span class="token operator">=</span>null, <span class="token assign-left variable">borrowed</span><span class="token operator">=</span>null, <span class="token assign-left variable">withdrawing</span><span class="token operator">=</span>null, <span class="token assign-left variable">depositing</span><span class="token operator">=</span>null<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\nReceived information about an account <span class="token builtin class-name">:</span> AccountDTO<span class="token punctuation">(</span>accountId<span class="token operator">=</span>trade, <span class="token assign-left variable">name</span><span class="token operator">=</span>trade, <span class="token assign-left variable">features</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>, <span class="token assign-left variable">balances</span><span class="token operator">=</span><span class="token punctuation">{</span>BTC<span class="token operator">=</span>BalanceDTO<span class="token punctuation">(</span>currency<span class="token operator">=</span>BTC, <span class="token assign-left variable">total</span><span class="token operator">=</span>null, <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token number">1</span>, <span class="token assign-left variable">frozen</span><span class="token operator">=</span>null, <span class="token assign-left variable">loaned</span><span class="token operator">=</span>null, <span class="token assign-left variable">borrowed</span><span class="token operator">=</span>null, <span class="token assign-left variable">withdrawing</span><span class="token operator">=</span>null, <span class="token assign-left variable">depositing</span><span class="token operator">=</span>null<span class="token punctuation">)</span>, <span class="token assign-left variable">USDT</span><span class="token operator">=</span>BalanceDTO<span class="token punctuation">(</span>currency<span class="token operator">=</span>USDT, <span class="token assign-left variable">total</span><span class="token operator">=</span>null, <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token number">100000</span>, <span class="token assign-left variable">frozen</span><span class="token operator">=</span>null, <span class="token assign-left variable">loaned</span><span class="token operator">=</span>null, <span class="token assign-left variable">borrowed</span><span class="token operator">=</span>null, <span class="token assign-left variable">withdrawing</span><span class="token operator">=</span>null, <span class="token assign-left variable">depositing</span><span class="token operator">=</span>null<span class="token punctuation">)</span>, <span class="token assign-left variable">ETH</span><span class="token operator">=</span>BalanceDTO<span class="token punctuation">(</span>currency<span class="token operator">=</span>ETH, <span class="token assign-left variable">total</span><span class="token operator">=</span>null, <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token number">10</span>, <span class="token assign-left variable">frozen</span><span class="token operator">=</span>null, <span class="token assign-left variable">loaned</span><span class="token operator">=</span>null, <span class="token assign-left variable">borrowed</span><span class="token operator">=</span>null, <span class="token assign-left variable">withdrawing</span><span class="token operator">=</span>null, <span class="token assign-left variable">depositing</span><span class="token operator">=</span>null<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\nReceived information about a ticker <span class="token builtin class-name">:</span> TickerDTO<span class="token punctuation">(</span>currencyPair<span class="token operator">=</span>BTC/USDT, <span class="token assign-left variable">open</span><span class="token operator">=</span>null, <span class="token assign-left variable">last</span><span class="token operator">=</span><span class="token number">37072.9</span>, <span class="token assign-left variable">bid</span><span class="token operator">=</span><span class="token number">37070.3</span>, <span class="token assign-left variable">ask</span><span class="token operator">=</span><span class="token number">37072.9</span>, <span class="token assign-left variable">high</span><span class="token operator">=</span><span class="token number">37250.3</span>, <span class="token assign-left variable">low</span><span class="token operator">=</span><span class="token number">34400</span>, <span class="token assign-left variable">vwap</span><span class="token operator">=</span>null, <span class="token assign-left variable">volume</span><span class="token operator">=</span><span class="token number">74075.19293933</span>, <span class="token assign-left variable">quoteVolume</span><span class="token operator">=</span><span class="token number">2677417785.328956311</span>, <span class="token assign-left variable">bidSize</span><span class="token operator">=</span>null, <span class="token assign-left variable">askSize</span><span class="token operator">=</span>null, <span class="token assign-left variable">timestamp</span><span class="token operator">=</span><span class="token number">2021</span>-02-03T19:06:08.055+01:00<span class="token punctuation">[</span>Europe/Paris<span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Kucoin sandbox is having some issues right now. You should create your own exchange account and configure Cassandre accordingly.</p></div>',6),Yn={},Qn=(0,s(3744).Z)(Yn,[["render",function(n,a){const s=(0,e.up)("RouterLink"),Yn=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("div",p,[o,(0,e._)("p",null,[c,(0,e.Wm)(s,{to:"/ressources/trading-basics.html"},{default:(0,e.w5)((()=>[r])),_:1}),l])]),i,(0,e._)("p",null,[u,(0,e._)("a",k,[b,(0,e.Wm)(Yn)]),d]),m,(0,e._)("div",g,[h,(0,e._)("p",null,[f,(0,e.Wm)(s,{to:"/ressources/how-tos/how-to-create-a-kucoin-account.html"},{default:(0,e.w5)((()=>[y])),_:1}),v])]),w,(0,e._)("p",null,[_,(0,e._)("a",T,[S,(0,e.Wm)(Yn)]),D,(0,e._)("a",O,[U,(0,e.Wm)(Yn)]),C,(0,e._)("a",I,[A,(0,e.Wm)(Yn)]),P]),j,(0,e._)("ul",null,[(0,e._)("li",null,[E,(0,e._)("a",x,[R,(0,e.Wm)(Yn)]),B]),(0,e._)("li",null,[H,(0,e._)("a",q,[G,(0,e.Wm)(Yn)]),N]),(0,e._)("li",null,[F,(0,e._)("a",M,[W,(0,e.Wm)(Yn)]),L]),(0,e._)("li",null,[z,(0,e._)("a",X,[J,(0,e.Wm)(Yn)]),K]),(0,e._)("li",null,[Y,(0,e._)("a",Q,[V,(0,e.Wm)(Yn)]),Z]),(0,e._)("li",null,[$,(0,e._)("a",nn,[an,(0,e.Wm)(Yn)]),sn]),(0,e._)("li",null,[en,(0,e._)("a",tn,[pn,(0,e.Wm)(Yn)]),on]),(0,e._)("li",null,[cn,(0,e._)("a",rn,[ln,(0,e.Wm)(Yn)]),un])]),kn,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",bn,[dn,(0,e.Wm)(Yn)]),mn]),(0,e._)("li",null,[(0,e._)("a",gn,[hn,(0,e.Wm)(Yn)]),fn]),(0,e._)("li",null,[(0,e._)("a",yn,[vn,(0,e.Wm)(Yn)]),wn]),(0,e._)("li",null,[(0,e._)("a",_n,[Tn,(0,e.Wm)(Yn)]),Sn])]),(0,e._)("div",Dn,[On,(0,e._)("p",null,[Un,(0,e._)("a",Cn,[In,(0,e.Wm)(Yn)]),An,(0,e._)("a",Pn,[jn,(0,e.Wm)(Yn)]),En])]),xn,(0,e._)("p",null,[Rn,(0,e._)("a",Bn,[Hn,(0,e.Wm)(Yn)]),qn]),(0,e._)("p",null,[Gn,(0,e._)("a",Nn,[Fn,(0,e.Wm)(Yn)]),Mn]),(0,e._)("div",Wn,[Ln,(0,e._)("p",null,[zn,(0,e.Wm)(s,{to:"/learn/position-management.html"},{default:(0,e.w5)((()=>[Xn])),_:1}),Jn])]),Kn],64)}]])},3744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);