(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{368:function(t,s,a){"use strict";a.r(s);var e=a(45),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"deploy-run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-run"}},[t._v("#")]),t._v(" Deploy & run")]),t._v(" "),a("h2",{attrs:{id:"server-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#server-installation"}},[t._v("#")]),t._v(" Server installation")]),t._v(" "),a("p",[t._v("We are starting with a fresh "),a("a",{attrs:{href:"https://releases.ubuntu.com/20.04/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ubuntu 20.04.2 LTS (Focal Fossa)"),a("OutboundLink")],1),t._v(" installation on a dedicated server, and we will use "),a("a",{attrs:{href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker"),a("OutboundLink")],1),t._v(" to run our trading bot and the other components.")]),t._v(" "),a("p",[t._v("This is how it works:")]),t._v(" "),a("ul",[a("li",[t._v("Two images are started manually on the server:\n"),a("ul",[a("li",[t._v("A "),a("a",{attrs:{href:"https://hub.docker.com/_/postgres",target:"_blank",rel:"noopener noreferrer"}},[t._v("Postgresql image"),a("OutboundLink")],1),t._v(" to store strategies, orders, trades & positions.")]),t._v(" "),a("li",[t._v("A "),a("a",{attrs:{href:"https://hub.docker.com/r/prodrigestivill/postgres-backup-local",target:"_blank",rel:"noopener noreferrer"}},[t._v("Postgresql backup image"),a("OutboundLink")],1),t._v(" to backup Postgresql databases.")])])]),t._v(" "),a("li",[t._v("Our trading bot is built as a Docker image and deployed to the server by our continuous integration server.")])]),t._v(" "),a("p",[t._v('{% hint style="info" %}\nWe chose PostgreSQL as our database but you can choose the one you want, just add the corresponding JDBC driver to your '),a("code",[t._v("pom.xml")]),t._v(".\n{% endhint %}")]),t._v(" "),a("h3",{attrs:{id:"install-useful-required-tools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-useful-required-tools"}},[t._v("#")]),t._v(" Install useful & required tools")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" apt-transport-https ca-certificates "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" gnupg2 pass software-properties-common\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" -y upgrade\n")])])]),a("h3",{attrs:{id:"install-docker-docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-docker-docker-compose"}},[t._v("#")]),t._v(" Install Docker & docker-compose")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL https://download.docker.com/linux/ubuntu/gpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" apt-key "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" add-apt-repository "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb [arch=amd64] https://download.docker.com/linux/ubuntu '),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsb_release -cs"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(' stable"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-cache")]),t._v(" policy docker-ce\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce docker-compose\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("666")]),t._v(" /var/run/docker.sock\n")])])]),a("h3",{attrs:{id:"add-a-user-for-the-trading-bot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-a-user-for-the-trading-bot"}},[t._v("#")]),t._v(" Add a user for the trading bot")]),t._v(" "),a("p",[t._v("Our bot will be deployed to this server from another server (in our case, our continuous integration server), so we need to create a user that can connect with SSH:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useradd")]),t._v(" -m -d /home/sma-trading-bot sma-trading-bot\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("passwd")]),t._v(" sma-trading-bot\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gpasswd -a sma-trading-bot docker\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("usermod")]),t._v(" --shell /bin/bash sma-trading-bot\n")])])]),a("h2",{attrs:{id:"docker-images-on-the-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-images-on-the-server"}},[t._v("#")]),t._v(" Docker images on the server")]),t._v(" "),a("p",[t._v("Download the "),a("a",{attrs:{href:"https://github.com/cassandre-tech/cassandre-trading-bot/blob/development/trading-bot-server/docker-compose.yml",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker-compose.yml"),a("OutboundLink")],1),t._v(" file on your server, edit your preferences (password, timezone, backup settings...) and run it with the command:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" docker-compose up -d\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("You can download it directly with the command : "),a("code",[t._v("curl -o docker-compose.yml https://raw.githubusercontent.com/cassandre-tech/cassandre-trading-bot/development/trading-bot-server/docker-compose.yml")])])]),t._v(" "),a("h3",{attrs:{id:"network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#network"}},[t._v("#")]),t._v(" Network")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cassandre")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cassandre\n")])])]),a("p",[t._v("This part declares a network named "),a("code",[t._v("cassandre")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"volumes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#volumes"}},[t._v("#")]),t._v(" Volumes")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cassandre_database")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cassandre_database_backup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),a("p",[t._v("This part declares two volumes (space on disk) :")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("cassandre_database")]),t._v(" for the database.")]),t._v(" "),a("li",[a("code",[t._v("cassandre_database_backup")]),t._v(" for the database backups.")])]),t._v(" "),a("h3",{attrs:{id:"postgresql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postgresql"}},[t._v("#")]),t._v(" Postgresql")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cassandre-postgresql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" library/postgres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cassandre\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cassandre_database"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/postgresql/data\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" TZ=Europe/Paris\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" PGTZ=Europe/Paris\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" POSTGRES_DB=cassandre_trading_bot\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" POSTGRES_USER=cassandre_trading_bot\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" POSTGRES_PASSWORD=mypassword\n")])])]),a("p",[t._v("This starts a Postgresql image where our trading bot will store its data (strategies, orders, trades & positions).")]),t._v(" "),a("h3",{attrs:{id:"postgresql-backup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postgresql-backup"}},[t._v("#")]),t._v(" Postgresql backup")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cassandre-postgresql-backup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prodrigestivill/postgres"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("backup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cassandre"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("postgresql\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cassandre\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cassandre_database_backup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/backups\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" TZ=Europe/Paris\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" POSTGRES_HOST=postgresql\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" POSTGRES_DB=cassandre_trading_bot\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" POSTGRES_USER=cassandre_trading_bot\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" POSTGRES_PASSWORD=mypassword\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" POSTGRES_EXTRA_OPTS="),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("schema=public\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" SCHEDULE=@hourly\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" BACKUP_KEEP_DAYS=7\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" BACKUP_KEEP_WEEKS=4\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" BACKUP_KEEP_MONTHS=0\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" HEALTHCHECK_PORT=8080\n")])])]),a("p",[t._v("This starts an image that will connect to the Postgresql image and make backups according to the parameters: "),a("code",[t._v("SCHEDULE")]),t._v(", "),a("code",[t._v("BACKUP_KEEP_DAYS")]),t._v(", "),a("code",[t._v("BACKUP_KEEP_WEEKS")]),t._v(" and "),a("code",[t._v("BACKUP_KEEP_MONTHS")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"your-bot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#your-bot"}},[t._v("#")]),t._v(" Your bot")]),t._v(" "),a("p",[t._v("There are several ways to do what we are trying to do, we choose this one:")]),t._v(" "),a("ul",[a("li",[t._v("Our trading bot source code is hosted in a private "),a("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),a("OutboundLink")],1),t._v(" project.")]),t._v(" "),a("li",[t._v("On every push, our "),a("a",{attrs:{href:"https://github.com/features/actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github actions"),a("OutboundLink")],1),t._v(" script does the following steps:\n"),a("ul",[a("li",[t._v("Creates the docker image of our trading bot.")]),t._v(" "),a("li",[t._v("Login to our "),a("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker hub repository"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("li",[t._v("Push the image to our docker hub repository.")]),t._v(" "),a("li",[t._v("Connect to our private server via ssh.")]),t._v(" "),a("li",[t._v("Stop the previous running image of our bot and download/run the new image.")])])])]),t._v(" "),a("p",[t._v("The source of our script is "),a("a",{attrs:{href:"https://raw.githubusercontent.com/cassandre-tech/cassandre-trading-bot/development/trading-bot-server/deployment.yml",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(" and this is what it does:")]),t._v(" "),a("h3",{attrs:{id:"build-the-docker-image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-the-docker-image"}},[t._v("#")]),t._v(" Build the docker image")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Build with Maven and creates the docker image\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mvn spring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("boot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("build"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("image\n")])])]),a("h3",{attrs:{id:"push-image-to-our-private-docker-hub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-image-to-our-private-docker-hub"}},[t._v("#")]),t._v(" Push image to our private docker hub")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Push image to docker hub\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n    echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin\n    docker push straumat/trading-bot:latest")]),t._v("\n")])])]),a("h3",{attrs:{id:"deploy-to-the-production-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-to-the-production-server"}},[t._v("#")]),t._v(" Deploy to the production server")]),t._v(" "),a("p",[t._v("The CI script does the following:")]),t._v(" "),a("ul",[a("li",[t._v("Connect to our production server with SSH.")]),t._v(" "),a("li",[t._v("Login to our docker private account.")]),t._v(" "),a("li",[t._v("Stop & delete the image of the previous trading bot (if it exists).")]),t._v(" "),a("li",[t._v("Retrieve the new image from the docker hub.")]),t._v(" "),a("li",[t._v("Run the image with all the parameters specified in Github secrets.")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deploy to production server\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" appleboy/ssh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@master\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.SSH_HOST "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.SSH_PORT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.SSH_USERNAME "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.SSH_PASSWORD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin\n      docker stop $(docker ps -aq --filter \"label=trading-bot\")\n      docker rm -f $(docker ps -aq --filter \"label=trading-bot\")\n      docker pull straumat/trading-bot:latest\n      docker run  -d \\\n                  --security-opt apparmor=unconfined \\\n                  --network=\"cassandre\" \\\n                  -e TZ=Europe/Paris \\\n                  -e CASSANDRE_TRADING_BOT_EXCHANGE_NAME='${{ secrets.CASSANDRE_TRADING_BOT_EXCHANGE_NAME }}' \\\n                  -e CASSANDRE_TRADING_BOT_EXCHANGE_USERNAME='${{ secrets.CASSANDRE_TRADING_BOT_EXCHANGE_USERNAME }}' \\\n                  -e CASSANDRE_TRADING_BOT_EXCHANGE_PASSPHRASE='${{ secrets.CASSANDRE_TRADING_BOT_EXCHANGE_PASSPHRASE }}' \\\n                  -e CASSANDRE_TRADING_BOT_EXCHANGE_KEY='${{ secrets.CASSANDRE_TRADING_BOT_EXCHANGE_KEY }}' \\\n                  -e CASSANDRE_TRADING_BOT_EXCHANGE_SECRET='${{ secrets.CASSANDRE_TRADING_BOT_EXCHANGE_SECRET }}' \\\n                  -e CASSANDRE_TRADING_BOT_EXCHANGE_MODES_SANDBOX='${{ secrets.CASSANDRE_TRADING_BOT_EXCHANGE_MODES_SANDBOX }}' \\\n                  -e CASSANDRE_TRADING_BOT_EXCHANGE_MODES_DRY='${{ secrets.CASSANDRE_TRADING_BOT_EXCHANGE_MODES_DRY }}' \\\n                  -e CASSANDRE_TRADING_BOT_EXCHANGE_RATES_ACCOUNT='${{ secrets.CASSANDRE_TRADING_BOT_EXCHANGE_RATES_ACCOUNT }}' \\\n                  -e CASSANDRE_TRADING_BOT_EXCHANGE_RATES_TICKER='${{ secrets.CASSANDRE_TRADING_BOT_EXCHANGE_RATES_TICKER }}' \\\n                  -e CASSANDRE_TRADING_BOT_EXCHANGE_RATES_ORDER='${{ secrets.CASSANDRE_TRADING_BOT_EXCHANGE_RATES_ORDER }}' \\\n                  -e CASSANDRE_TRADING_BOT_DATABASE_DATASOURCE_DRIVER-CLASS-NAME=${{ secrets.CASSANDRE_TRADING_BOT_DATABASE_DATASOURCE_DRIVER_CLASS_NAME }} \\\n                  -e CASSANDRE_TRADING_BOT_DATABASE_DATASOURCE_URL=${{ secrets.CASSANDRE_TRADING_BOT_DATABASE_DATASOURCE_URL }} \\\n                  -e CASSANDRE_TRADING_BOT_DATABASE_DATASOURCE_USERNAME=${{ secrets.CASSANDRE_TRADING_BOT_DATABASE_DATASOURCE_USERNAME }} \\\n                  -e CASSANDRE_TRADING_BOT_DATABASE_DATASOURCE_PASSWORD=${{ secrets.CASSANDRE_TRADING_BOT_DATABASE_DATASOURCE_PASSWORD }} \\\n                  -e CASSANDRE_TRADING_BOT_DATABASE_TABLE-PREFIX=${{ secrets.CASSANDRE_TRADING_BOT_DATABASE_TABLE_PREFIX }} \\\n                  -l trading-bot \\\n                  straumat/trading-bot:latest")]),t._v("\n")])])]),a("p",[t._v("These are the parameters for the Postgresql connection:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Parameter")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Value")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("DRIVER-CLASS-NAME")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("org.postgresql.Driver")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("URL")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("jdbc:postgresql://cassandre-postgresql/cassandre_trading_bot")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("USERNAME")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("cassandre_trading_bot")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("PASSWORD")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("mypassword")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("On the server, thanks to the docker label, you can view the bot logs with the command : "),a("code",[t._v('docker logs $(docker ps -aq --filter "label=trading-bot") --follow')])])])])}),[],!1,null,null,null);s.default=n.exports}}]);