{"version":3,"sources":["webpack:///./src/learn/dry-mode-and-backtesting.md?3af7","webpack:///./src/learn/dry-mode-and-backtesting.md","webpack:///./src/learn/dry-mode-and-backtesting.md?5602"],"names":[],"mappings":"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","file":"assets/js/13.5ed3686a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"dry-mode-backtesting\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#dry-mode-backtesting\"}},[_vm._v(\"#\")]),_vm._v(\" Dry mode & backtesting\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"dry-mode\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#dry-mode\"}},[_vm._v(\"#\")]),_vm._v(\" Dry mode\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Cassandre provides a dry mode allowing you to simulate exchange interactions. You can enable it by setting the parameter \"),_c('code',[_vm._v(\"cassandre.trading.bot.exchange.modes.dry\")]),_vm._v(\" to \"),_c('code',[_vm._v(\"true\")]),_vm._v(\" in \"),_c('code',[_vm._v(\"src/main/resources/application.properties.\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Cassandre will emulate valid exchange replies to your orders and will increase/decrease your virtual account. This way, you can test your strategy, see the gains you will make, and validate you have the results you expect.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"The first step is to configure your(s) virtual account(s) balances; in Dry mode, Cassandre will search and import all files starting with \"),_c('code',[_vm._v(\"user\")]),_vm._v(\" and ending with \"),_c('code',[_vm._v(\".tsv\")]),_vm._v(\" or \"),_c('code',[_vm._v(\".csv\")]),_vm._v(\" in \"),_c('code',[_vm._v(\"src/main/resources\")]),_vm._v(\" or \"),_c('code',[_vm._v(\"src/test/resources\")]),_vm._v(\".\")]),_vm._v(\" \"),_c('p',[_vm._v(\"In those files, for each account, you set the balances of each cryptocurrency. For example, this is the content of \"),_c('code',[_vm._v(\"user-trade.csv\")]),_vm._v(\" :\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"BTC,0.99962937\\nUSDT,1000\\nETH,10 \\n\")])])]),_c('p',[_vm._v(\"When you start Cassandre, you will see this:\")]),_vm._v(\" \"),_c('div',{staticClass:\"language- extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-text\"}},[_c('code',[_vm._v(\"22:53:38 - Adding account 'trade'\\n22:53:38 - - Adding balance 0.99962937 BTC\\n22:53:38 - - Adding balance 1000 USDT\\n22:53:38 - - Adding balance 10 ETH\\n\")])])]),_c('p',[_vm._v(\"Now you can create orders and positions, and this will increase/decrease your virtual account. Of course, Cassandre checks that you have enough assets before accepting your orders.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"You can use the dry mode to test your trading bot with real data, but you can also use it for backtesting.\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"backtesting\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#backtesting\"}},[_vm._v(\"#\")]),_vm._v(\" Backtesting\")]),_vm._v(\" \"),_c('p',[_vm._v(\"In simple words, backtesting a strategy is the process of testing a trading strategy on prior time periods. Cassandre trading bot allows you to simulate your bots' reaction to historical data during tests.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"The first step is to add \"),_c('a',{attrs:{\"href\":\"https://mvnrepository.com/artifact/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-starter-test\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"cassandre-trading-bot-spring-boot-starter-test\"),_c('OutboundLink')],1),_vm._v(\" to your project dependency.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Edit your \"),_c('code',[_vm._v(\"pom.xml\")]),_vm._v(\" file and add this dependency :\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-xml extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-xml\"}},[_c('code',[_vm._v(\"\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"<\")]),_vm._v(\"dependencies\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"\\n\\t\\t...\\n\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"<\")]),_vm._v(\"dependency\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"<\")]),_vm._v(\"groupId\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"tech.cassandre.trading.bot\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"</\")]),_vm._v(\"groupId\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"<\")]),_vm._v(\"artifactId\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"cassandre-trading-bot-spring-boot-starter-test\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"</\")]),_vm._v(\"artifactId\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"<\")]),_vm._v(\"version\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"4.1.0\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"</\")]),_vm._v(\"version\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"\\n\\t\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"<\")]),_vm._v(\"scope\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"test\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"</\")]),_vm._v(\"scope\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"\\n\\t\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"</\")]),_vm._v(\"dependency\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"\\n\\t\\t...\\n\\t\"),_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token tag\"}},[_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"</\")]),_vm._v(\"dependencies\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\">\")])]),_vm._v(\"\\n\")])])]),_c('p',[_c('a',{attrs:{\"href\":\"https://search.maven.org/search?q=g:%22tech.cassandre.trading.bot%22%20AND%20a:%22cassandre-trading-bot-spring-boot-starter%22\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_c('img',{attrs:{\"src\":\"https://img.shields.io/maven-central/v/tech.cassandre.trading.bot/cassandre-trading-bot-spring-boot-starter.svg?label=Maven%20Central\",\"alt\":\"Maven Central\"}}),_c('OutboundLink')],1)]),_vm._v(\" \"),_c('p',[_vm._v(\"Now, we need to generate the data we want to use during the JUnit tests. We can use the \"),_c('a',{attrs:{\"href\":\"https://docs.kucoin.com/#get-klines\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Kucoin API\"),_c('OutboundLink')],1),_vm._v(\"; to do so, run this on the command line :\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-bash extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-bash\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token assign-left variable\"}},[_vm._v(\"startDate\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"`\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"date\")]),_vm._v(\" --date\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"3 months ago\\\"\")]),_vm._v(\" +\"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"%s\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"`\")])]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token assign-left variable\"}},[_vm._v(\"endDate\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"`\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"date\")]),_vm._v(\" +\"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"%s\\\"\")]),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"`\")])]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"curl\")]),_vm._v(\" -s \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\"https://api.kucoin.com/api/v1/market/candles?type=1day&symbol=BTC-USDT&startAt=\"),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"${startDate}\")]),_vm._v(\"&endAt=\"),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"${endDate}\")]),_vm._v(\"\\\"\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"\\\\\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" jq -r -c \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"\\\".data[] | @tsv\\\"\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"\\\\\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"|\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"tac\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token variable\"}},[_vm._v(\"$1\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\">\")]),_vm._v(\" tickers-btc-usdt.tsv\\n\")])])]),_c('p',[_vm._v(\"It will create a file named \"),_c('code',[_vm._v(\"tickers-btc-usdt.tsv\")]),_vm._v(\" that contains the historical rate of BTC-USDT from \"),_c('code',[_vm._v(\"startDate\")]),_vm._v(\" (3 months ago) to \"),_c('code',[_vm._v(\"endDate\")]),_vm._v(\" (now). Of course, you can choose your own dates and currency pair.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Place this file in the \"),_c('code',[_vm._v(\"src/test/resources\")]),_vm._v(\" folder of your project and add this line to your JUnit test class:\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-java extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-java\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token annotation punctuation\"}},[_vm._v(\"@Import\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"TickerFluxMock\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"class\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\")])])]),_c('p',[_vm._v(\"Now, during the tests, instead of receiving tickers from the exchange, you will receive tickers imported from the \"),_c('code',[_vm._v(\"tsv/csv\")]),_vm._v(\" files you put in \"),_c('code',[_vm._v(\"src/test/resources\")]),_vm._v(\".\")]),_vm._v(\" \"),_c('p',[_vm._v(\"You can see an example of dry mode and backtesting in the \"),_c('RouterLink',{attrs:{\"to\":\"/learn/technical-analysis/overview.html\"}},[_vm._v(\"Technical analysis chapter\")]),_vm._v(\".\")],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./dry-mode-and-backtesting.md?vue&type=template&id=7dc8c352&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"4b61893c-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??ref--1-1!../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./dry-mode-and-backtesting.md?vue&type=template&id=7dc8c352&\""],"sourceRoot":""}