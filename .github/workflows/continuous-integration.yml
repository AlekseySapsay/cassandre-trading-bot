name: Continuous integration

on:
  push:
    branches:
      - "development"

jobs:
  build:
    # ==================================================================================================================
    # Configuration.
    runs-on: ubuntu-latest

    steps:
      # ================================================================================================================
      - name: GPG Setup
        id: gpg
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" > private.asc
          gpg --import --batch private.asc

      # ================================================================================================================
      - name: JDK 11 Setup
        id: jdk
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      # ================================================================================================================
      - name: Retrieve the sources
        id: sources
        uses: actions/checkout@v2

      # ================================================================================================================
      - name: Retrieve the version
        id: version
        run: |
          echo "::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      # ================================================================================================================
      - name: Build, run tests, package and deploy to Maven central
        id: package
        env: # Environment variables.
          # GPG.
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          # OSSRH credentials.
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: |
          mvn deploy -B -Dgpg.passphrase=${GPG_PASSPHRASE}

      # ================================================================================================================
      - name: Test Cassandre trading bot maven archetype - basic strategy
        id: cassandre-trading-bot-spring-boot-starter-basic-archetype
        run: |
          mvn -B archetype:generate \
            -DarchetypeGroupId=tech.cassandre.trading.bot \
            -DarchetypeArtifactId=cassandre-trading-bot-spring-boot-starter-basic-archetype \
            -DarchetypeVersion=${{ steps.version.outputs.version }} \
            -DgroupId=com.example \
            -DartifactId=archetype-test-basic \
            -Dversion=1.0-SNAPSHOT \
            -Dpackage=com.example
          mvn -f archetype-test-basic/pom.xml test

      # ================================================================================================================
      - name: Test Cassandre trading bot maven archetype - basic ta4j strategy
        id: cassandre-trading-bot-spring-boot-starter-basic-ta4j-archetype
        run: |
          mvn -B archetype:generate \
            -DarchetypeGroupId=tech.cassandre.trading.bot \
            -DarchetypeArtifactId=cassandre-trading-bot-spring-boot-starter-basic-ta4j-archetype \
            -DarchetypeVersion=${{ steps.version.outputs.version }} \
            -DgroupId=com.example \
            -DartifactId=archetype-test-ta4j-basic \
            -Dversion=1.0-SNAPSHOT \
            -Dpackage=com.example
          mvn -f archetype-test-ta4j-basic/pom.xml test

      # ================================================================================================================
      - name: Upload codacy coverage results
        id: upload-codacy-coverage-reporter
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report \
          --project-token ${{ secrets.CODACY_API_TOKEN }} \
          -r spring-boot-starter/autoconfigure/target/site/jacoco/jacoco.xml
