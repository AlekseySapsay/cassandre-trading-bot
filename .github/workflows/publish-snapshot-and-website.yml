name: Publish snapshot and website

on:
  push:
    branches:
      - "development"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ================================================================================================================
      - name: JDK 11 Setup
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      # ================================================================================================================
      - name: Retrieve the sources
        uses: actions/checkout@v2

      # ================================================================================================================
      - name: GPG Setup
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" > private.asc
          gpg --import --batch private.asc

      # ================================================================================================================
      - name: Build, package and deploy to Maven central
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Ossrh credentials.
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          # GPG.
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mvn deploy -B -DskipTests=true -Dgpg.passphrase=${GPG_PASSPHRASE}

      # ================================================================================================================
      - name: Retrieve the latest release published on Github
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        id: getLatestRelease
        with:
          repository: ${{ github.repository }}

      # ================================================================================================================
      - name: Add the GraphQL schema to the website
        run: |
          cp spring-boot-starter-api/spring-boot-starter-api-graphql/autoconfigure/src/main/resources/schema/*.graphqls docs/docs/.vuepress/public/api/graphql/definition

      # ================================================================================================================
      - name: Generate GraphQL documentation for the website
        uses: Code-Hex/gqldoc-actions@v1.0.8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          schema: spring-boot-starter-api/spring-boot-starter-api-graphql/autoconfigure/src/main/resources/schema/*.graphqls
          output: docs/docs/learn/graphql-api-documentation

      # ================================================================================================================
      - name: Install vuepress, set release number, and build the website
        run: |
          yarn add -D vuepress@next
          find . -type f -name "*.md" -exec sed -i 's/CASSANDRE_LATEST_RELEASE/${{ steps.getLatestRelease.outputs.release }}/g' {} \;
          yarn --cwd docs install
          yarn --cwd docs docs:build docs

      # ================================================================================================================
      - name: Deploy the website to github pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: docs/docs/.vuepress/dist
          commit-message: "Website update"
          clean: true
